# the scripting-addition must be loaded manually if
# you are running yabai on macOS Big Sur. Uncomment
# the following line to have the injection performed
# when the config is executed during startup.
#
# for this to work you must configure sudo such that
# it will be able to run the command without password

sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# global settings
yabai -m config mouse_follows_focus          off
yabai -m config focus_follows_mouse          off
yabai -m config window_placement             second_child
yabai -m config window_topmost               off
yabai -m config window_shadow                on
yabai -m config window_opacity               off
yabai -m config window_opacity_duration      0.0
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.95
yabai -m config window_border                off
yabai -m config window_border_width          6
# yabai -m config active_window_border_color   0xff539AFC
# yabai -m config normal_window_border_color   0xff181E24
# yabai -m config active_window_border_color   0xff81A1C1
# yabai -m config normal_window_border_color   0xff7A808C
yabai -m config insert_feedback_color        0xff61afef
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 off
yabai -m config mouse_modifier               fn
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize
yabai -m config mouse_drop_action            swap

yabai -m config layout                       bsp
yabai -m config top_padding                  12
yabai -m config bottom_padding               12
yabai -m config left_padding                 12
yabai -m config right_padding                12
yabai -m config window_gap                   12

# Space 1 : Productivity
yabai -m space 1 --label ✎

# Space 2 : Web surfing
yabai -m space 2 --label ✈

# Space 3 : Emacs FTW
yabai -m space 3 --label ✌

# Space 4 : File management, orginize
yabai -m space 4 --label ❖

# Space 5 : Mail and messenger
yabai -m space 5 --label ☏

# Space 6 : Entertainment
yabai -m space 6 --label ⚄

# Space 7 : Laptop
yabai -m space 7 --label ☀
# yabai -m space 7 --label VII
# yabai -m space 8 --label VIII
# yabai -m space 9 --label IX
# yabai -m space 10 --label X

## Default spaces
# yabai -m rule --add app="Alacritty"     space=1
# yabai -m rule --add app="Emacs"     space=1
yabai -m rule --add app="jamovi"     space=1
yabai -m rule --add app="Microsoft Word"     space=1
yabai -m rule --add app="Microsoft PowerPoint"     space=1
yabai -m rule --add app="Microsoft Excel"     space=1
yabai -m rule --add app="Pages"     space=1
yabai -m rule --add app="Keynote"     space=1

yabai -m rule --add app="Safari" space=2
yabai -m rule --add app="Firefox" space=2
yabai -m rule --add app="PDF Expert"     space=2

yabai -m rule --add app="Zotero" space=4
yabai -m rule --add app="Notion" space=4
yabai -m rule --add app="Calendar" space=4

yabai -m rule --add app="Spark" space=5
yabai -m rule --add app="KakaoTalk" space=5

yabai -m rule --add app="Music" space=6
yabai -m rule --add app="Plex" space=6

yabai -m rule --add title="^Emacs Everywhere$" space=^

# ^^ these are annoying
# yabai -m rule --add app="Safari"        space=3
# yabai -m rule --add app="Spotify"       space=4
# yabai -m rule --add app="Discord"       space=5

#Exclusion lists
yabai -m rule --add app="^System Preferences$" manage=off
yabai -m rule --add app="^Font Book$" manage=off
yabai -m rule --add app="^Digital Colou?r Meter$" manage=off
yabai -m rule --add app="^Raycast$" manage=off
yabai -m rule --add app="^Übersicht$" window_opacity=off
yabai -m rule --add title="^MiniPlayer$" manage=off
yabai -m rule --add title="^Preferences$" manage=off
yabai -m rule --add title="^Open$" manage=off
# yabai -m rule --add app="^Finder$" manage=off

# yabai -m config external_bar all:40:0
yabai -m config external_bar all:0:42


# refresh my Übersicht bar when the space changes
yabai -m signal --add event=space_changed \
    action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"
echo "yabai configuration loaded.."

# This prevents focus jumping around spaces after closing emacsclient
# https://github.com/koekeishiya/yabai/issues/485

function record_window_id {
    json=$(yabai -m query --windows)
    window_id=$(echo $json | jq -er 'map(select(.focused == 1))[0].id')
    ruby $HOME/Documents/Dev/dotfiles/yabai/yabai_focus.rb write $window_id
}

function focus_previous_window {
    previous_window_id=$(ruby $HOME/yabai_focus.rb read $YABAI_WINDOW_ID)
    yabai -m window --focus $previous_window_id
}

yabai -m signal --add event=window_focused action="${functions[record_display_id]}"
yabai -m signal --add event=application_front_switched action="${functions[record_display_id]}"
yabai -m signal --add event=window_destroyed action="${functions[focus_current_display]}"
yabai -m signal --add event=application_terminated action="${functions[focus_current_display]}"

# Always focus on windows in space when chancing space
# https://github.com/koekeishiya/yabai/issues/160

# 1. grab all windows on the current space
# 2. filter for focused windows
# 3. if the length of the array returned by step 2 is 0, focus the window under the cursor
yabai -m query --windows --space | jq -er 'map(select(.focused == 1)) | length > 0' \
	|| yabai -m window --focus mouse
